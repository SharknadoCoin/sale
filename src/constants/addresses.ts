import { Networks } from "./blockchain";

const BSC_MAINNET = {
    DAO_ADDRESS: "0xf42b61820F3343d803bCb6d4750A6e4943447382",
    TIME_ADDRESS: "0xCCe19525531dbd08A4dD75a7B092B32c7aA36b02",
    TREASURY_ADDRESS: "0xF211E69b02f4BC5EEF1C357d090aDb1939D877b4",
    MIM_ADDRESS: "0xeD24FC36d5Ee211Ea25A80239Fb8C4Cfd80f12Ee",
    TIME_BONDING_CALC_ADDRESS: "0x259eD74961cA52011cd48D85Af88c061957862e0",

    MEMO_ADDRESS: "0x7A5DA8E20313f8B17033a23e7e67406cFe0692a4",
    STAKING_ADDRESS: "0x4456B87Af11e87E329AB7d7C7A246ed1aC2168B9",
    STAKING_HELPER_ADDRESS: "0x096BBfB78311227b805c968b070a81D358c13379",
    WMEMO_ADDRESS: "0x7A5DA8E20313f8B17033a23e7e67406cFe0692a4",

    ZAPIN_ADDRESS: "0x636432d22B3E96747428c7998A18bBdFE5d16186",
};

export const getAddresses = (networkID: number) => {
    if (networkID === Networks.BSC) return BSC_MAINNET;

    throw Error("Network don't support");
};
